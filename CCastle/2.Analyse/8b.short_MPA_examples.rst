.. _MPA-examples:

========================================
Everyday Message Passing examples (ToDo)
========================================

In :ref:`ConcurrentComputingConcepts` we have catalogued some :ref:`MPA` quite shortly. As a kind of addendum, we show a few well known message-passing systems, to shed some light on those theoretical features in this article.

Pipes
=====

The famous *Unix Pipes* are unidirectional, reliable, blocking, asynchronous, buffered, non-networking **data-only**
messages. The (“stdout”) output of one process is fed as input to (one) other process. It’s data only, in one direction
-- but the controll can in two directions: when the second (receiving) process can’t process the data (and the buffers
becoming full), the first process can be slowed down (although this a not well know feature).

It’s also an example of a quite implicit channel: the programmer (of both programs) have nothing (to little) to do
extra, to make it possible.

DDS
===

E-Mail
======

(BSD) Sockets
=============

